name: DESC_CI_example_docker
on: [workflow_dispatch]

# Use the bash login (needed for envs in miniconda)
defaults:
  run:
    shell: bash -l {0}
    
jobs:
  Explore-GitHub-Actions:

    # List OS runners and Python versions we want to test on.
    strategy:
      # Don't quit all jobs if only one job fails.
      fail-fast: false
      
      matrix:
        # Make sure our code works on these.
        python-version: [3.9]
        os: [ubuntu-18.04, ubuntu-20.04]
        experimental: [false]
  
        # Test on this, but don't mind if it fails.
        include:
          - os: ubuntu-22.04
            python-version: 3.10
            experimental: true
        
    container: lsstdesc/desc-python:latest
    
    # If True, do not fail the job, just warn me.
    continue-on-error: ${{ matrix.experimental }}
  
    # What operating system is this job running on?
    runs-on: ${{ matrix.os}}

    # Our CI steps for this job.
    steps:
      - run: echo "Running on ${{ matrix.os }} with Python ${{ matrix.python-version }} (experimental = ${{ matrix.experimental }}"
      
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: conda list
      
      # Perform unit tests.
      - name: Test with pytest
        run:
          pytest test_arithmetic.py
